spring.jpa.hibernate.ddl-auto=validate
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/springsecuritydev
spring.datasource.username=userservicemwfeve
spring.datasource.password=Sumit@558
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true

# Server Configuration
server.port=9000

# Logging Configuration
logging.level.org.springframework.security=trace
logging.level.org.springframework.web=trace

# Spring Security User Configuration
spring.security.user.name=user
spring.security.user.password=password

    ## OAuth2 Authorization Server Configuration
    #spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
    #spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
    #spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
    #spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code,refresh_token
    #spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=http://127.0.0.1:8080/login/oauth2/code/oidc-client
    #spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=http://127.0.0.1:8080/
    #spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid,profile
    #spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true
    #


logging.level.org.springframework.security.*=TRACE


spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=emailServiceGroup
spring.kafka.consumer.auto-offset-reset=earliest